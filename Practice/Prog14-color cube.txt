//
//  main.cpp
//  cgPractice
//
//  Created by 이준호 on 2018. 4. 10..
//  Copyright © 2018년 Taristmas. All rights reserved.
//

#include <GLUT/GLUT.h>
#include <iostream>
#include <stdlib.h>
#include <math.h>

GLfloat vertices[][3] = { {-1.0,-1.0,-1.0}, {1.0,-1.0,-1.0}, {1.0,1.0,-1.0}, {-1.0,1.0,-1.0},
    {-1.0,-1.0, 1.0}, {1.0,-1.0, 1.0}, {1.0,1.0, 1.0}, {-1.0,1.0, 1.0} };
GLfloat colors [][3] = { { 0.0, 0.0, 0.0}, {1.0, 0.0, 0.0}, {1.0,1.0, 0.0}, { 0.0,1.0, 0.0},
    { 0.0, 0.0, 1.0}, {1.0, 0.0, 1.0}, {1.0,1.0, 1.0}, { 0.0,1.0, 1.0} };

void init();
void display();
void timer(int t);
void polygon( int a, int b, int c, int d );

static int delay = 10;
int theta = 0;

int main(int argc, char* argv[]) {
    glutInit( &argc, (char**)argv );
    glutInitDisplayMode( GLUT_SINGLE | GLUT_RGB | GLUT_DEPTH );
    glutInitWindowSize( 500, 500 );
    glutCreateWindow("Prog14: color cube");
    glutDisplayFunc(display);
    init();
    glutMainLoop();
    
    
    init();
    glutMainLoop();
    return 0;
    
}

void polygon( int a, int b, int c, int d )
{
    glBegin(GL_POLYGON);
    glColor3fv ( colors [a] );
    glVertex3fv( vertices[a] );
    glColor3fv ( colors [b] );
    glVertex3fv( vertices[b] );
    glColor3fv ( colors [c] );
    glVertex3fv( vertices[c] );
    glColor3fv ( colors [d] );
    glVertex3fv( vertices[d] );
    glEnd();
}

void init() {
    glClearColor(1.0, 1.0, 1.0, 1.0);
    glOrtho ( -2.0, 2.0, -2.0, 2.0, -10.0, 10.0 );
    glEnable(GL_DEPTH_TEST);
    
}

void display() {
    
    glClear( GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT );
    polygon(0, 3, 2, 1);
    polygon(2, 3, 7, 6);
    polygon(0, 4, 7, 3);
    polygon(1, 2, 6, 5);
    polygon(4, 5, 6, 7);
    polygon(0, 1, 5, 4);
    glFlush();
}

void timer(int t)
{
    glutPostRedisplay();
    glutTimerFunc(delay, timer, t);
}


